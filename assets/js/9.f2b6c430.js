(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{176:function(t,e,_){"use strict";_.r(e);var v=_(0),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("div",{staticClass:"content"},[t._m(0),t._v(" "),_("p",[t._v("进门最先的很多都是笔试, 虽然这部分内容在面试者看完考试的内容后。如果答的题不是特别好也不会直接不见就轰人走。但是，答得不好会当面询问、到时候仍然还是抓耳挠腮的料。")]),t._v(" "),_("p",[t._v("此处搜罗了一些简单的笔试题，仅供参考和自我学习。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.im/entry/58d7635e5c497d0057fae036",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细解析 HTTP 与 HTTPS 的区别"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("HTTPS 协议是由 SSL + HTTP 协议构建的可进行加密传输，身份认证的网络协议，要比 HTTP 更安全")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),_("blockquote",[_("p",[t._v("参考："),_("a",{attrs:{href:"https://segmentfault.com/a/1190000012092552",target:"_blank",rel:"noopener noreferrer"}},[t._v("细说浏览器输入URL后发生了什么"),_("OutboundLink")],1)])]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),_("p",[t._v("参考: "),_("a",{attrs:{href:"https://www.jianshu.com/p/d4466f5e4f6b",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 请求详解"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("HTTP请求报文由3部分组成：请求行+请求头+请求体")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),_("p",[t._v("参看地址：\n"),_("a",{attrs:{href:"https://github.com/jawil/blog/issues/14",target:"_blank",rel:"noopener noreferrer"}},[t._v("通俗大白话来理解TCP协议的三次握手和四次分手"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("a",{attrs:{href:"https://mp.weixin.qq.com/s/n0--UphB4SCFOU3k0cTyRw",target:"_blank",rel:"noopener noreferrer"}},[t._v("滴滴工程师图文并茂带你深入理解 TCP 握手分手全过程"),_("OutboundLink")],1)]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),_("p",[t._v('这个问题的本质是, 信道不可靠, 但是通信双发需要就某个问题达成一致. 而要解决这个问题, 无论你在消息中包含什么信息, 三次通信是理论上的最小值. 所以三次握手不是 TCP 本身的要求, 而是为了满足 "在不可靠信道上可靠地传输信息" 这一需求所导致的. 请注意这里的本质需求, 信道不可靠, 数据传输要可靠. 三次达到了, 那后面你想接着握手也好, 发数据也好, 跟进行可靠信息传输的需求就没关系了. 因此, 如果信道是可靠的, 即无论什么时候发出消息, 对方一定能收到, 或者你不关心是否要保证对方收到你的消息, 那就能像 UDP 那样直接发送消息就可以了.')]),t._v(" "),t._m(20),t._v(" "),_("p",[t._v("参考地址： "),_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/24860273",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP 和 UDP 的区别"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("1、基于连接与无连接；")]),t._v(" "),_("p",[t._v("2、对系统资源的要求（TCP较多，UDP少）；")]),t._v(" "),_("p",[t._v("3、UDP程序结构较简单；")]),t._v(" "),_("p",[t._v("4、流模式与数据报模式 ；")]),t._v(" "),_("p",[t._v("5、TCP保证数据正确性，UDP可能丢包；")]),t._v(" "),_("p",[t._v("6、TCP保证数据顺序，UDP不保证。")]),t._v(" "),_("p",[t._v("可靠的原因就在 4.5.6 这三点")])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"网络相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络相关"}},[this._v("#")]),this._v(" 网络相关")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"基础题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础题"}},[this._v("#")]),this._v(" 基础题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"讲解一下-http-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#讲解一下-http-协议"}},[this._v("#")]),this._v(" 讲解一下 http 协议")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ul",[_("li",[t._v("支持客户/服务器模式。")]),t._v(" "),_("li",[t._v("简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。")]),t._v(" "),_("li",[t._v("灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。")]),t._v(" "),_("li",[t._v("无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")]),t._v(" "),_("li",[t._v("无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"https-和-http-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https-和-http-区别"}},[this._v("#")]),this._v(" https 和 http 区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("HTTPS 需要申请 CA 证书")]),this._v(" "),e("li",[this._v("HTTP 是超文本传输协议，HTTPS 则是具有安全性的 SSL 加密传输协议")]),this._v(" "),e("li",[this._v("HTTP 和 HTTPS 使用的事完全不同的连接方式，用的端口号也不一样，前者是 80端口，后者是 443")]),this._v(" "),e("li",[this._v("HTTP 的连接很简单，是无状态的；HTTPS 协议是由 SSL + HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议简单")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"在浏览器中输入地址都做了那些事情"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在浏览器中输入地址都做了那些事情"}},[this._v("#")]),this._v(" 在浏览器中输入地址都做了那些事情")])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ol",[_("li",[_("p",[t._v("DNS域名解析")])]),t._v(" "),_("li",[_("p",[t._v("建立TCP连接")])]),t._v(" "),_("li",[_("p",[t._v("发送HTTP请求")])]),t._v(" "),_("li",[_("p",[t._v("服务器处理请求")])]),t._v(" "),_("li",[_("p",[t._v("返回响应结果")])]),t._v(" "),_("li",[_("p",[t._v("关闭TCP连接")])]),t._v(" "),_("li",[_("p",[t._v("浏览器解析")])]),t._v(" "),_("li",[_("p",[t._v("浏览器布局渲染")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http-请求详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-请求详解"}},[this._v("#")]),this._v(" HTTP 请求详解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("请求头")])])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("table",[_("thead",[_("tr",[_("th",[t._v("字段")]),t._v(" "),_("th",[t._v("说明")]),t._v(" "),_("th",[t._v("示例")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Accept")]),t._v(" "),_("td",[t._v("客户端能接收的"),_("strong",[t._v("MIME")]),t._v("数据类型")]),t._v(" "),_("td",[t._v("Accept: text/plain, text/html")])]),t._v(" "),_("tr",[_("td",[t._v("Accept-Charset")]),t._v(" "),_("td",[t._v("客户端采用的编码在格式")]),t._v(" "),_("td",[t._v("Accept-Charset: iso-8859-5")])]),t._v(" "),_("tr",[_("td",[t._v("Accept-Encoding")]),t._v(" "),_("td",[t._v("客户端支持的数据压缩格式")]),t._v(" "),_("td",[t._v("Accept-Encoding: compress, gzip")])]),t._v(" "),_("tr",[_("td",[t._v("Accept-Language")]),t._v(" "),_("td",[t._v("客户端采用的语言环境")]),t._v(" "),_("td",[t._v("Accept-Language: en,zh")])]),t._v(" "),_("tr",[_("td",[t._v("Authorization")]),t._v(" "),_("td",[t._v("HTTP授权的授权证书")]),t._v(" "),_("td",[t._v("Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==")])]),t._v(" "),_("tr",[_("td",[t._v("Connection")]),t._v(" "),_("td",[t._v("请求完成后是保持链接Keep-Alive，还是关闭链接close")]),t._v(" "),_("td",[t._v("Connection: close")])]),t._v(" "),_("tr",[_("td",[t._v("Content-Length")]),t._v(" "),_("td",[t._v("请求的内容长度")]),t._v(" "),_("td",[t._v("Content-Length: 348")])]),t._v(" "),_("tr",[_("td",[t._v("Cookie")]),t._v(" "),_("td",[t._v("客户端可以向服务器带数据")]),t._v(" "),_("td",[t._v("Cookie: $Version=1; Skin=new;")])]),t._v(" "),_("tr",[_("td",[t._v("From")]),t._v(" "),_("td",[t._v("发出请求的用户的Email")]),t._v(" "),_("td",[t._v("From: user@email.com")])]),t._v(" "),_("tr",[_("td",[t._v("Host")]),t._v(" "),_("td",[t._v("客户端想连接的目标主机和端口号")]),t._v(" "),_("td",[t._v("Host: http://www.hao123.com:8080")])]),t._v(" "),_("tr",[_("td",[t._v("Referer")]),t._v(" "),_("td",[t._v("客户端是从哪个资源来访问服务器的（一般用来防盗链）")]),t._v(" "),_("td",[t._v("Referer: http://www.hao123.com/archives/test.html")])]),t._v(" "),_("tr",[_("td",[t._v("If-Modified-Since")]),t._v(" "),_("td",[t._v("资源的缓存时间")]),t._v(" "),_("td",[t._v("If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT")])]),t._v(" "),_("tr",[_("td",[t._v("Pragma")]),t._v(" "),_("td",[t._v("实现特定的指令，它可应用到响应链上的任何接收方")]),t._v(" "),_("td",[t._v("Pragma: no-cache")])]),t._v(" "),_("tr",[_("td",[t._v("Refresh")]),t._v(" "),_("td",[t._v("服务端要求客户端多长时间刷新一次")]),t._v(" "),_("td",[t._v("Refresh: 5; url=http://www.hao123.com/archives/test.html")])]),t._v(" "),_("tr",[_("td",[t._v("User-Agent")]),t._v(" "),_("td",[t._v("客户端的版本")]),t._v(" "),_("td",[t._v("User-Agent: Mozilla/5.0 (Linux; X11)")])]),t._v(" "),_("tr",[_("td",[t._v("UA-Pixels")]),t._v(" "),_("td",[t._v("屏幕大小")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("UA-Color")]),t._v(" "),_("td",[t._v("颜色深度")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("UA-OS")]),t._v(" "),_("td",[t._v("操作系统类型")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("UA-CPU")]),t._v(" "),_("td",[t._v("CPU类型")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("Accept-Ranges")]),t._v(" "),_("td",[t._v("可以请求网页实体的一个或者多个子范围字段")]),t._v(" "),_("td",[t._v("Accept-Ranges: bytes")])]),t._v(" "),_("tr",[_("td",[t._v("Cache-Control")]),t._v(" "),_("td",[t._v("指定请求和响应遵循的缓存机制")]),t._v(" "),_("td",[t._v("Cache-Control: no-cache")])]),t._v(" "),_("tr",[_("td",[t._v("Content-Type")]),t._v(" "),_("td",[t._v("请求的与实体对应的MIME信息")]),t._v(" "),_("td",[t._v("Content-Type: application/x-www-form-urlencoded")])]),t._v(" "),_("tr",[_("td",[t._v("Range")]),t._v(" "),_("td",[t._v("客户端只请求实体的一部分，指定范围")]),t._v(" "),_("td",[t._v("Range: bytes=500-999")])]),t._v(" "),_("tr",[_("td",[t._v("Date")]),t._v(" "),_("td",[t._v("客户端当前请求服务器的时间")]),t._v(" "),_("td",[t._v("Date: Tue, 15 Nov 2010 08:12:31 GMT")])]),t._v(" "),_("tr",[_("td",[t._v("If-Match")]),t._v(" "),_("td",[t._v("只有请求内容与实体相匹配才有效")]),t._v(" "),_("td",[t._v("If-Match: “737060cd8c284d8af7ad3082f209582d”")])]),t._v(" "),_("tr",[_("td",[t._v("If-None-Match")]),t._v(" "),_("td",[t._v("如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变")]),t._v(" "),_("td",[t._v("If-None-Match: “737060cd8c284d8af7ad3082f209582d”")])]),t._v(" "),_("tr",[_("td",[t._v("If-Range")]),t._v(" "),_("td",[t._v("如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag")]),t._v(" "),_("td",[t._v("If-Range: “737060cd8c284d8af7ad3082f209582d”")])]),t._v(" "),_("tr",[_("td",[t._v("If-Unmodified-Since")]),t._v(" "),_("td",[t._v("只在实体在指定时间之后未被修改才请求成功")]),t._v(" "),_("td",[t._v("If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT")])]),t._v(" "),_("tr",[_("td",[t._v("Max-Forwards")]),t._v(" "),_("td",[t._v("限制信息通过代理和网关传送的时间")]),t._v(" "),_("td",[t._v("Max-Forwards: 10")])]),t._v(" "),_("tr",[_("td",[t._v("Proxy-Authorization")]),t._v(" "),_("td",[t._v("连接到代理的授权证书")]),t._v(" "),_("td",[t._v("Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==")])]),t._v(" "),_("tr",[_("td",[t._v("TE")]),t._v(" "),_("td",[t._v("客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息")]),t._v(" "),_("td",[t._v("TE: trailers,deflate;q=0.5")])]),t._v(" "),_("tr",[_("td",[t._v("Upgrade")]),t._v(" "),_("td",[t._v("向服务器指定某种传输协议以便服务器进行转换（如果支持）")]),t._v(" "),_("td",[t._v("Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11")])]),t._v(" "),_("tr",[_("td",[t._v("Via")]),t._v(" "),_("td",[t._v("通知中间网关或代理服务器地址，通信协议")]),t._v(" "),_("td",[t._v("Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)")])]),t._v(" "),_("tr",[_("td",[t._v("Warning")]),t._v(" "),_("td",[t._v("关于消息实体的警告信息")]),t._v(" "),_("td",[t._v("Warn: 199 Miscellaneous warning")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("响应头")])])},function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("table",[_("thead",[_("tr",[_("th",[t._v("应答头")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Allow")]),t._v(" "),_("td",[t._v("服务器支持哪些请求方法（如GET、POST等）。")])]),t._v(" "),_("tr",[_("td",[t._v("Content-Encoding")]),t._v(" "),_("td",[t._v('文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader("Accept-Encoding")）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。')])]),t._v(" "),_("tr",[_("td",[t._v("Content-Length")]),t._v(" "),_("td",[t._v("表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入 ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。")])]),t._v(" "),_("tr",[_("td",[t._v("Content-Type")]),t._v(" "),_("td",[t._v("表示后面的文档属于什么MIME类型。Servlet默认为text/plain，但通常需要显式地指定为text/html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。")])]),t._v(" "),_("tr",[_("td",[t._v("Date")]),t._v(" "),_("td",[t._v("当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。")])]),t._v(" "),_("tr",[_("td",[t._v("Expires")]),t._v(" "),_("td",[t._v("应该在什么时候认为文档已经过期，从而不再缓存它？")])]),t._v(" "),_("tr",[_("td",[t._v("Last-Modified")]),t._v(" "),_("td",[t._v("文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。")])]),t._v(" "),_("tr",[_("td",[t._v("Location")]),t._v(" "),_("td",[t._v("表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。")])]),t._v(" "),_("tr",[_("td",[t._v("Refresh")]),t._v(" "),_("td",[t._v('表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader("Refresh", "5; URL=http://host/path")让浏览器读取指定的页面。  注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV="Refresh" CONTENT="5;URL=http://host/path"＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。   注意Refresh的意义是"N秒之后刷新本页面或访问指定页面"，而不是"每隔N秒刷新本页面或访问指定页面"。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV="Refresh" ...＞。   注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。')])]),t._v(" "),_("tr",[_("td",[t._v("Server")]),t._v(" "),_("td",[t._v("服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。")])]),t._v(" "),_("tr",[_("td",[t._v("Set-Cookie")]),t._v(" "),_("td",[t._v('设置和页面关联的Cookie。Servlet不应使用response.setHeader("Set-Cookie", ...)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。')])]),t._v(" "),_("tr",[_("td",[t._v("WWW-Authenticate")]),t._v(" "),_("td",[t._v('客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader("WWW-Authenticate", "BASIC realm=＼"executives＼"")。  注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"三次握手和四次挥手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三次握手和四次挥手"}},[this._v("#")]),this._v(" 三次握手和四次挥手")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("三次握手")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("客户端发送一个SYN段，并指明客户端的初始序列号，即ISN(c).")])]),this._v(" "),e("li",[e("p",[this._v("服务端发送自己的SYN段作为应答，同样指明自己的ISN(s)。为了确认客户端的SYN，将ISN(c)+1作为ACK数值。这样，每发送一个SYN，序列号就会加1. 如果有丢失的情况，则会重传。")])]),this._v(" "),e("li",[e("p",[this._v("为了确认服务器端的SYN，客户端将ISN(s)+1作为返回的ACK数值。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("四次分手")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("第一次分手：主机1（可以使客户端，也可以是服务器端），设置Sequence Number和Acknowledgment Number，向主机2发送一个FIN报文段；此时，主机1进入FIN_WAIT_1状态；这表示主机1没有数据要发送给主机2了")])]),this._v(" "),e("li",[e("p",[this._v("第二次分手：主机2收到了主机1发送的FIN报文段，向主机1回一个ACK报文段，Acknowledgment Number为Sequence Number加1；主机1进入FIN_WAIT_2状态；主机2告诉主机1，我“同意”你的关闭请求")])]),this._v(" "),e("li",[e("p",[this._v("第三次分手：主机2向主机1发送FIN报文段，请求关闭连接，同时主机2进入LAST_ACK状态")])]),this._v(" "),e("li",[e("p",[this._v("第四次分手：主机1收到主机2发送的FIN报文段，向主机2发送ACK报文段，然后主机1进入TIME_WAIT状态；主机2收到主机1的ACK报文段以后，就关闭连接；此时，主机1等待2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，主机1也可以关闭连接了。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://md.laragh.top/vuepress/network/tcp-request.png",alt:"tcp-request"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tcp-为什么需要三次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-为什么需要三次握手"}},[this._v("#")]),this._v(" TCP 为什么需要三次握手")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tcp-和-udp-的区别？tcp-数据传输过程中怎么做到可靠的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp-的区别？tcp-数据传输过程中怎么做到可靠的？"}},[this._v("#")]),this._v(" TCP 和 UDP 的区别？TCP 数据传输过程中怎么做到可靠的？")])}],!1,null,null,null);e.default=r.exports}}]);