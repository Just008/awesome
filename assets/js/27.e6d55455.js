(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{194:function(v,_,e){"use strict";e.r(_);var t=e(0),a=Object(t.a)({},(function(){var v=this.$createElement;this._self._c;return this._m(0)}),[function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"与-php-交互"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与-php-交互"}},[v._v("#")]),v._v(" 与 PHP 交互")]),v._v(" "),e("p",[v._v("用了那么多年的 "),e("code",[v._v("LNMP")]),v._v("，你真的知道 "),e("code",[v._v("nginx")]),v._v(" 和 "),e("code",[v._v("php")]),v._v(" 是怎么交互的么？")]),v._v(" "),e("h2",{attrs:{id:"基础知识扫盲"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础知识扫盲"}},[v._v("#")]),v._v(" 基础知识扫盲")]),v._v(" "),e("p",[v._v("关于 "),e("code",[v._v("cgi")]),v._v(". "),e("code",[v._v("Fastcgi")]),v._v(", "),e("code",[v._v("PHP-FPM")]),v._v(" 的基础知识：")]),v._v(" "),e("h3",{attrs:{id:"cgi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cgi"}},[v._v("#")]),v._v(" cgi")]),v._v(" "),e("p",[e("code",[v._v("cgi")]),v._v(" 是一种通用网关协议。")]),v._v(" "),e("p",[v._v("为了解决不同的语言解释器(如php、python解释器)与 "),e("code",[v._v("WebServer")]),v._v(" 的通信而产生的一种协议。只要遵守这种协议就能实现语言与 "),e("code",[v._v("WebServer")]),v._v(" 通讯。")]),v._v(" "),e("p",[e("code",[v._v("cgi")]),v._v(" 是规定了要传什么数据和以什么格式传输给语言解析器的协议。")]),v._v(" "),e("h3",{attrs:{id:"fastcgi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fastcgi"}},[v._v("#")]),v._v(" Fastcgi")]),v._v(" "),e("p",[v._v("是一种对 "),e("code",[v._v("cgi")]),v._v(" 协议升华的一种协议。")]),v._v(" "),e("p",[e("code",[v._v("Fastcgi")]),v._v("像是一个常驻 (long-live) 型的 "),e("code",[v._v("cgi")]),v._v("，它可以一直执行着，只要激活后，不会每次都要花费时间去 "),e("code",[v._v("fork")]),v._v(" 一次(这是 "),e("code",[v._v("cgi")]),v._v(" 最为人诟病的 "),e("code",[v._v("fork-and-execute")]),v._v(" 模式)。")]),v._v(" "),e("p",[v._v("它还支持分布式的运算, 即 "),e("code",[v._v("Fastcgi")]),v._v(" 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。")]),v._v(" "),e("h3",{attrs:{id:"php-fpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#php-fpm"}},[v._v("#")]),v._v(" PHP-FPM")]),v._v(" "),e("p",[v._v("全称：PHP Fastcgi Process Manager。")]),v._v(" "),e("p",[e("code",[v._v("PHP-FPM")]),v._v(" 是一个实现了 Fastcgi 协议的程序,用来管理 Fastcgi 起的进程的。即能够调度 php-cgi 进程的程序，并提供了进程管理的功能。")]),v._v(" "),e("p",[v._v("进程包含 master 进程和 worker 进程两种进程。master进程只有一个，负责监听端口(默认9000)，接收来自 WebServer的请求，而 worker 进程则一般有多个(具体数量根据实际需要配置)，每个进程内部都嵌入了一个 PHP 解释器，是PHP代码真正执行的地方。")]),v._v(" "),e("p",[e("strong",[v._v("补充：当你的机器处理 "),e("code",[v._v("php")]),v._v(" 的速度不够快而且机器配置尚可时，可以通过加 worker 的形式加快处理速度。")])]),v._v(" "),e("h3",{attrs:{id:"fastcgi-优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fastcgi-优势"}},[v._v("#")]),v._v(" Fastcgi 优势")]),v._v(" "),e("p",[v._v("Fastcgi 则会先 fork 一个 master，解析配置文件，初始化执行环境，然后再 fork 多个 worker。")]),v._v(" "),e("p",[v._v("当请求过来时，master 会传递给一个 worker ，然后立即可以接受下一个请求。这样就避免了重复的劳动，效率自然是高。")]),v._v(" "),e("p",[v._v("而且当 worker 不够用时，master 可以根据配置预先启动几个 worker 等着；当然空闲 worker 太多时，也会停掉一些，这样就提高了性能，也节约了资源。这就是Fastcgi的对进程的管理。")]),v._v(" "),e("p",[v._v("大多数Fastcgi实现都会维护一个进程池。注：swoole作为httpserver，实际上也是类似这样的工作方式。")]),v._v(" "),e("p",[e("strong",[v._v("所以，php-fpm 的默认配置是：worker 是动态调整的")])]),v._v(" "),e("h2",{attrs:{id:"交互过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#交互过程"}},[v._v("#")]),v._v(" 交互过程")]),v._v(" "),e("p",[v._v("我们以用户访问index.php为，服务器环境为LNMP:")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("用户请求index.php时，首先到 "),e("code",[v._v("Nginx")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Nginx")])]),v._v(" "),e("ul",[e("li",[v._v("根据配置查找路由")]),v._v(" "),e("li",[v._v("加载 nginx 的 fast-cgi 模块( FastCGI 的 Client ),将根据 fastcgi.conf 文件中"),e("code",[v._v("fastcgi_*")]),v._v("配置参数值也一并加入转发任务中")]),v._v(" "),e("li",[v._v("根据 nginx.conf 文件"),e("code",[v._v("fastcgi_pass")]),v._v("配置将请求转发到"),e("code",[v._v("127.0.0.1:9000")]),v._v("。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("PHP-FPM")])]),v._v(" "),e("ul",[e("li",[e("code",[v._v("PHP-FPM")]),v._v(" 的 "),e("code",[v._v("master")]),v._v(" 进程监听 "),e("code",[v._v("9000")]),v._v(" 端口。")]),v._v(" "),e("li",[v._v("收到请求后调用子进程来处理逻辑，PHP解释器解释PHP语法并返回给 "),e("code",[v._v("Nginx")]),v._v(" 。")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("Nginx")])]),v._v(" "),e("ul",[e("li",[v._v("将响应返回给用户")])])])])])}],!1,null,null,null);_.default=a.exports}}]);