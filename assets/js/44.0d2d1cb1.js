(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{212:function(t,e,s){"use strict";s.r(e);var n=s(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("blockquote",[s("p",[t._v("本文属于学习文章。来自 "),s("a",{attrs:{href:"https://www.jianshu.com/p/43d04d8baaf7",target:"_blank",rel:"noopener noreferrer"}},[t._v("超实用压力测试工具－ab工具"),s("OutboundLink")],1)])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("概念：服务器并发处理能力的量化描述，单位是reqs/s，指的是某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。")]),t._v(" "),s("p",[t._v("计算公式：总请求数 / 处理完成这些请求数所花费的时间")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("概念：某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。")]),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("概念：要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("计算公式：处理完成所有请求数所花费的时间/ （总请求数 / 并发用户数）")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("计算公式：处理完成所有请求数所花费的时间 / 总请求数")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),s("p",[t._v("测试结果中关注以下内容：")]),t._v(" "),t._m(24)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"ab-工具的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ab-工具的使用"}},[this._v("#")]),this._v(" AB 工具的使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"测试的概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试的概念"}},[this._v("#")]),this._v(" 测试的概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("需要理解关于一些压测的概念")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"吞吐率（requests-per-second）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#吞吐率（requests-per-second）"}},[this._v("#")]),this._v(" 吞吐率（Requests per second）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Request per second = Complete requests / Time taken for tests")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"并发连接数（the-number-of-concurrent-connections）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并发连接数（the-number-of-concurrent-connections）"}},[this._v("#")]),this._v(" 并发连接数（The number of concurrent connections）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"并发用户数（the-number-of-concurrent-users，concurrency-level）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并发用户数（the-number-of-concurrent-users，concurrency-level）"}},[this._v("#")]),this._v(" 并发用户数（The number of concurrent users，Concurrency Level）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"用户平均请求等待时间（time-per-request）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户平均请求等待时间（time-per-request）"}},[this._v("#")]),this._v(" 用户平均请求等待时间（Time per request）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Time per request = Time taken for tests /（ Complete requests / Concurrency Level）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"服务器平均请求等待时间（time-per-request-across-all-concurrent-requests）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器平均请求等待时间（time-per-request-across-all-concurrent-requests）"}},[this._v("#")]),this._v(" 服务器平均请求等待时间（Time per request: across all concurrent requests）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Time taken for / testsComplete requests")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("可以看到，它是吞吐率的倒数。 同时，它也=用户平均请求等待时间/并发用户数，即 "),e("code",[this._v("Time per request / Concurrency Level")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"工具简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具简介"}},[this._v("#")]),this._v(" 工具简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("ab全称为：apache bench")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("官网解释:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("ab是Apache超文本传输协议(HTTP)的性能测试工具。其设计意图是描绘当前所安装的Apache的执行性能，主要是显示你安装的Apache每秒可以处理多少个请求。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("其他网站的解释")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("ab是apache自带的压力测试工具。ab非常实用，它不仅可以对apache服务器进行网站访问压力测试，也可以对或其它类型的服务器进行压力测试。比如nginx、tomcat、IIS等。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Centos")]),t._v("\nyum -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" httpd-tools\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ubuntu")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apache2-utils\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"开始测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始测试"}},[this._v("#")]),this._v(" 开始测试")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ab -n 100 -c 10 http://test.com/")]),this._v("\n其中 -n 表示请求数，-c 表示并发数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"测试结果分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试结果分析"}},[this._v("#")]),this._v(" 测试结果分析")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("This is ApacheBench, Version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Revision")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1706008")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCopyright "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1996")]),t._v(" Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking box.laragh.top "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("be patient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".done\n\n\nServer Software:        nginx/1.13.12\nServer Hostname:        box.laragh.top\nServer Port:            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128\n\nDocument Path:          /\nDocument Length:        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12457")]),t._v(" bytes\n\nConcurrency Level:      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nTime taken "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" tests:   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.326")]),t._v(" seconds\nComplete requests:      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nFailed requests:        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Connect: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Receive: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Length: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(", Exceptions: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nKeep-Alive requests:    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nTotal transferred:      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("134400")]),t._v(" bytes\nHTML transferred:       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("124834")]),t._v(" bytes\nRequests per second:    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30.68")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/sec] (mean)")]),t._v("\nTime per request:       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("325.950")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTime per request:       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32.595")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mean, across all concurrent requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nTransfer rate:          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("402.67")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Kbytes/sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" received\n\nConnection Times "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              min  mean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("+/-sd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" median   max\nConnect:       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\nProcessing:    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("206")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85.2")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("214")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("309")]),t._v("\nWaiting:       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("206")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85.2")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("214")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("309")]),t._v("\nTotal:         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85.8")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("230")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n\nPercentage of the requests served within a certain "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("230")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("266")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("319")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("321")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("%    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("326")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("longest request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Server Software：被测试Web服务器的软件名称。")]),t._v(" "),s("li",[t._v("Server Hostname：请求URL中的主机名称。")]),t._v(" "),s("li",[t._v("Server Port：被测试Web服务器的侦听端口。")]),t._v(" "),s("li",[t._v("Document Path：请求的URL的绝对路径。")]),t._v(" "),s("li",[t._v("Document Length:HTTP响应数据的正文长度。")]),t._v(" "),s("li",[t._v("Concurrency Level：并发用户数，设置的“c”参数。")]),t._v(" "),s("li",[t._v("Time taken for tests：所有请求处理完成所花费的总时间。")]),t._v(" "),s("li",[t._v("Complete requests：总请求数，设置的“n”参数。")]),t._v(" "),s("li",[t._v("Failed requests：失败的请求数。")]),t._v(" "),s("li",[t._v("Total transferred: 所有请求的响应数据长度总和。")]),t._v(" "),s("li",[t._v("HTML transferred：所有请求的响应数据中正文数据的总和。也就是减去Total transferred中HTTP响应数据中头信息的长度。")]),t._v(" "),s("li",[t._v("Request spersecond：Web服务器的吞吐率，等于Completerequests/Time taken for tests。")]),t._v(" "),s("li",[t._v("Time per request：用户平均请求等待时间，等于Time taken for tests/(Complete requests/Concurrency Level)。")]),t._v(" "),s("li",[t._v("Transfer rate:这些请求在单位时间内从服务器取得的数据长度,等于Total transferred / Time taken for tests。")])])}],!1,null,null,null);e.default=r.exports}}]);